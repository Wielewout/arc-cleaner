name: Pipeline

on:
  push:
    branches:
      - main
  pull_request: {}

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.1.7
      - name: Setup Go
        uses: actions/setup-go@v5.0.2
        with:
          go-version: stable
      - name: Build binary
        run: make build ${{ github.ref_type == 'tag' && format('VERSION={0}', github.ref_name) || '' }}
      - name: Run tests
        run: make test
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6.1.0
        with:
          version: v1.60.3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            ghcr.io/wielewout/arc-cleaner
            wielewout/arc-cleaner
          flavor: |
            latest=false
          tags: |
            type=edge
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Install buildx
        uses: docker/setup-buildx-action@v3.6.1
        with:
          install: true
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: build/container/Containerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
